worker_processes  4;

error_log  /var/log/nginx/error.log;
error_log  /var/log/nginx/error.log  notice;
error_log  /var/log/nginx/error.log  info;

pid        /var/log/nginx/nginx.pid;

events {
    worker_connections  65535;
}

http {
    server_names_hash_bucket_size 64;

    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile on;
    client_max_body_size 30m;

    keepalive_timeout  65;

    gzip  on;

    proxy_temp_path /data/cdn_cache/proxy_temp_dir;
    proxy_cache_path /data/cdn_cache/proxy_cache_dir levels=1:2 keys_zone=cache_one:50m inactive=1d max_size=1g;

    proxy_connect_timeout 5;
    # nginx 服务器与被代理服务连接超时时间，代理超时

    proxy_read_timeout 60;
    # nginx 服务器接收被代理服务器数据超时时间，单位秒，规定时间内 nginx 服务器没收到数据，则超时

    proxy_send_timeout 5;
    # nginx 服务器发送数据给被代理服务器超时时间，单位秒，规定时间内 nginx 服务器没发送数据，则超时

    proxy_buffer_size 16k;
    #设置代理服务器（nginx）保存用户头信息的缓冲区大小

    proxy_buffers 4 64k;
    # proxy_buffers 缓冲区，网页平均在64k以下的话，这样设置

    proxy_busy_buffers_size 128k;
    # 高负荷下缓冲大小（proxy_buffers*2）

    proxy_temp_file_write_size 128k;
    # 设定缓存文件夹大小，大于这个值，将从 upstream 服务器传

    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_404;
    # 服务器返回了超时或者 500 配置返回规则

    server {
        listen 80;
        server_name  python.docs.geekpie.club;
        location / {
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://docs.python.org;
        }
    }


}